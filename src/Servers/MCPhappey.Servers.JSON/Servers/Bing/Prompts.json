{
  "prompts": [
    {
      "prompt": "Given the following prompt from the user, generate a list of SERP queries to research the topic. Return a maximum of {numberOfQueries} queries, but feel free to return less if the original prompt is clear.\n\nMake sure each query is unique and not similar to each other. The queries must be optimized for use with the Bing search engine.\n\nFor Bing specifically, this means: \n- Formulate natural language queries as if a professional is searching the internet for precise information. \n- Use clear, specific, and descriptive phrases instead of isolated keywords. \n- Combine subject matter terms with relevant contextual keywords, such as industries, technologies, processes, geographic regions, dates, or roles. \n- Whenever applicable, include details like location, time frame, or application domain to narrow the scope and improve relevance (e.g., \"real estate investment outlook Netherlands 2025\"). \n- Avoid vague, overly broad, or generic terms like \"innovation trends\" or \"technology update\" — they produce low-value results. \n- Prefer questions or well-structured phrases that reflect how professionals search online (e.g., \"What are the ESG reporting requirements for real estate funds in Europe?\"). \n- Do not use boolean operators (e.g., AND, OR), advanced syntax, file filters, or quotation marks unless absolutely necessary — Bing is optimized for natural search language. \n- Reflect real-world phrasing that could appear in high-quality content such as whitepapers, news articles, research briefs, or expert blogs. \n- If the topic is emerging or time-sensitive, consider temporal cues like \"2024\", \"latest\", \"new\", or \"current\".\n\nUser prompt:\n<prompt>{topic}</prompt>\n\n{context}\n\nReturn a JSON object with a single property: 'queries'. Each item in the 'queries' array must be a string representing one SERP query. If the prompt and or context is too vague, just return JSON object with empty list. Don't ask for clarification. The list must be optimized for the Bing search engine.",
      "template": {
        "name": "get-bing-serp-queries",
        "description": "Get a list of optimized SERP queries for a Bing search engine",
        "arguments": [
          {
            "name": "topic",
            "description": "Topic for the the search queries",
            "required": true
          },
          {
            "name": "numberOfQueries",
            "description": "Number of queries to return",
            "required": true
          },
          {
            "name": "context",
            "description": "More context/background info about the topic"
          }
        ]
      },
      "resources": [
        "bot://code/datetime/now",
        "bot://currentUser/preferredLanguage"
      ]
    },
    {
      "prompt": "Facts:\n{facts}\n======\nGiven only the facts above, provide a comprehensive/detailed answer.\nYou don't know where the knowledge comes from, just answer.\nIf you don't have sufficient information, reply with 'INFO NOT FOUND'.\nQuestion: {question}\nAnswer:\n",
      "template": {
        "name": "extract-with-facts",
        "description": "Answer a question from some facts",
        "arguments": [
          {
            "name": "facts",
            "description": "Given facts",
            "required": true
          },
          {
            "name": "question",
            "description": "Question to answer",
            "required": true
          }
        ]
      },
      "resources": [
        "bot://code/datetime/now",
        "bot://currentUser/preferredLanguage"
      ]
    },
    {
      "prompt": "Content:\n###\n{content}\n###\n\nThe above content is a collection of data from various sources. Analyze the content thoroughly and extract all URLs that provide additional knowledge to achieve the user's goals/question outlined below. Provide only a comma-separated list of these URLs without any additional text or prefixes. If no relevant URLs are found, respond with 'INFO NOT FOUND'.\n\nUser Goals:\n###\n{question}\n###\n",
      "template": {
        "name": "extract-urls-with-facts",
        "description": "Extract URLs from search results relevant for the user question",
        "arguments": [
          {
            "name": "content",
            "description": "Content to get the URLs from",
            "required": true
          },
          {
            "name": "question",
            "description": "Question to answer",
            "required": true
          }
        ]
      },
      "resources": ["bot://code/datetime/now"]
    }
  ]
}
