{
  "prompts": [
    {
      "prompt": "You are a data analysis assistant. Given the preview below, analyze the dataset for the user’s goal.\n\n- Columns: {columns}\n- Total rows: {totalRows}\n- Sample rows:\n{sampleRows}\n\nUser analysis request:\n{analysisGoal}\n\nDescribe the dataset: note structure, interesting patterns, possible data quality issues, and any trends or anomalies. Then, provide a high-level list of the most important analysis directions or queries that should be explored to answer the user's request. Your response should have three sections:\n\n1. **Overview**: Short summary of the dataset and what stands out.\n2. **Notes**: Observations, caveats, and things to watch for.\n3. **Suggested queries**: A plain-text, numbered list of high-level questions or analyses to perform (do not write code or formulas).",
      "template": {
        "name": "analyze-dataset-and-suggest-queries",
        "description": "Analyzes a dataset for a specific user analysis goal and provides an overview, notes, and a list of high-level queries or analysis directions.",
        "arguments": [
          {
            "name": "columns",
            "description": "List of all column names in the dataset.",
            "required": true
          },
          {
            "name": "totalRows",
            "description": "Total number of rows in the dataset.",
            "required": true
          },
          {
            "name": "sampleRows",
            "description": "A preview of the first few rows, formatted as a markdown table or equivalent.",
            "required": true
          },
          {
            "name": "analysisGoal",
            "description": "A description of what the user wants to analyze or find out.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Given the following data preview and high-level queries:\n\n- Columns: {columns}\n- Total rows: {totalRows}\n- Sample rows: {sampleRows}\n- High-level queries: {highLevelQueries}\n\nProduce **only** this JSON shape:\n\n{\n  \"queries\": [ { /* query */ }, ... ]\n}\n\nEach item in `queries` is a minimal query spec. Include **only** the properties that are necessary. **No comments, no extra keys, no explanations.**\n\n### Allowed properties per query (use sparingly)\n- `filter`: object of predicates.\n- `groupBy`: array of column names, or objects like {\"$toLower\":\"Col\"} for case-insensitive grouping.\n- `aggregate`: **alias-first** metric map. Keys are output aliases; values are operator objects. Never emit auto-suffixed names like `Amount_sum`.\n- `sort`: object mapping field/alias to direction (\"asc\" | \"desc\" | 1 | -1).\n- `limit`: integer row limit **after** sorting.\n- `topKPerGroup`: {\"by\":\"<metricAlias>\", \"order\":\"desc\"|\"asc\", \"k\":<int>} — use only for grouped results when a “top N per group” is requested.\n- `select`: final projection. Use to keep outputs small.\n  - `include`: array of field names to keep (group keys and/or aggregate aliases).\n  - `rename`: map of {\"from\":\"to\"} for final output naming.\n  - `expressions`: optional computed fields, with only {\"alias\": {\"$toLower\":\"Col\"}} supported.\n  - `excludeNulls`: boolean; if true, drop keys with null/empty values.\n- `outputNaming`: \"nested\" to place all aggregate outputs under `metrics`; omit or set \"flat\" otherwise.\n- `includeGroupKeys`: boolean. Omit (defaults to true). Set false only for global aggregates with no need to return grouping columns.\n- `compactNulls`: boolean. Prefer `true` when many nulls are expected.\n- `limitFields`: array of column names to retain when returning raw filtered rows (use instead of `select` for very simple cases).\n\n### Filter operators\nUse only when needed. Combine with implicit AND at the same level; use `$or`/`$and` arrays for logic.\n- Equality: `{ \"Col\": \"value\" }` or `{ \"Col\": { \"$eq\": \"value\" } }`\n- Case-insensitive equality: `{ \"Col\": { \"$eqi\": \"value\" } }`\n- Inequality: `$ne`\n- Membership: `$in`, `$nin` (arrays of literals)\n- Existence: `$exists`: true|false\n- Comparisons: `$gt`, `$gte`, `$lt`, `$lte`\n- Regex: `$regex` with optional `$options` (e.g. \"i\"); or `$regexi` (case-insensitive)\n\n### Aggregate operators (alias-first)\nEach value is one of:\n- `{ \"$count\": true }`\n- `{ \"$countDistinct\": \"Col\" }`\n- `{ \"$sum\": \"Col\" }`, `{ \"$avg\": \"Col\" }`, `{ \"$min\": \"Col\" }`, `{ \"$max\": \"Col\" }`\n- Arithmetic on sub-expressions:\n  - `{ \"$divide\": [ expr, expr ] }`\n  - `{ \"$add\": [ expr, ... ] }`, `{ \"$sub\": [ exprA, exprB ] }`, `{ \"$mul\": [ expr, ... ] }`\n- Sub-expressions can be any of the operators above, numeric literals, or `{ \"$count\": true }`.\n\n### Conciseness rules (important)\n- Prefer a **single** query per high-level question unless distinct outputs are clearly required.\n- Use `select.include` to return only the exact group keys and metric aliases referenced by the question.\n- Default to `compactNulls: true` when you expect nulls; otherwise omit it.\n- Do **not** include `includeGroupKeys` unless setting it to `false`.\n- Use `outputNaming: \"nested\"` only when many metrics are returned and grouping keys would repeat; otherwise omit it.\n- If a query is a simple count or sum, omit `groupBy`, `sort`, `limit`, and `select` unless necessary.\n\n### Output format reminder\nReturn exactly one JSON object with a `queries` array. No markdown, no prose, no comments, no trailing commas.",
      "template": {
        "name": "expand-queries-to-json-object",
        "description": "Given a data preview and high-level queries, output exactly one JSON object with a 'queries' array. Each query uses minimal properties and alias-first aggregates to keep results compact.",
        "arguments": [
          {
            "name": "columns",
            "description": "List of all column names in the dataset.",
            "required": true
          },
          {
            "name": "totalRows",
            "description": "Total number of rows in the dataset.",
            "required": true
          },
          {
            "name": "sampleRows",
            "description": "A preview of the first few rows, formatted as a markdown table or equivalent.",
            "required": true
          },
          {
            "name": "highLevelQueries",
            "description": "A numbered list of high-level queries or analysis directions to expand.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Query results:\n###\n{queryResults}\n###\n\nYou are a data analysis assistant. Given the original user analysis request and the executed query results below, synthesize a concise, well-structured answer.\n\n- User analysis request:\n{analysisGoal}\n\nStrictly follow these rules in your answer:\n\n1. **Fact-Based Only**: Only provide answers that can be directly and explicitly supported by the data. If the answer cannot be derived, or is only partially supported, you must clearly state this.\n2. **Direct Answer**: If possible, give a clear and concise answer to the user's question, using facts, numbers, and statistics from the results.\n3. **Logical Reasoning**: Explain your reasoning. Reference specific results, groupings, counts, percentages, or trends found in the data.\n4. **Supporting Statistics**: Present any relevant statistics, breakdowns, or tables that help clarify your answer.\n5. **Limitations & Uncertainty**: If the data is missing, ambiguous, incomplete, or insufficient to answer the analysis request, state this explicitly. Never speculate or infer beyond what is directly visible in the data. Example phrases: 'The available data does not allow this question to be answered,' or 'No supporting evidence for this conclusion is present in the data.'\n\nBe clear, factual, and transparent at all times. Never invent information, and always reference the data for each statement. If in doubt, err on the side of caution and state that the answer cannot be determined from the data.",
      "template": {
        "name": "analyze-query-results-and-summarize",
        "description": "Given the user's original request and all query results, synthesizes a direct answer with supporting statistics and logical reasoning. Explicitly indicates if the answer cannot be determined from the data.",
        "arguments": [
          {
            "name": "analysisGoal",
            "description": "The user's original analysis question or prompt.",
            "required": true
          },
          {
            "name": "queryResults",
            "description": "The results of all executed queries (can be summarized, top-N, or statistics if the raw result is too large).",
            "required": true
          }
        ]
      }
    }
  ]
}
