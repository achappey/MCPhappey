{
  "prompts": [
    {
      "prompt": "Create a simple process flow diagram for: {processDescription}. Output as PlantUML code, showing all main steps as nodes and arrows for the flow.",
      "template": {
        "name": "diagram-process-flow",
        "description": "Generates a process flow diagram (PlantUML) for a described process.",
        "arguments": [
          {
            "name": "processDescription",
            "description": "Short description of the process to visualize.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Convert this text into a mindmap diagram using Mermaid format. Central topic: {centralTopic}. Use the provided key points as branches.",
      "template": {
        "name": "diagram-mindmap",
        "description": "Turns a central topic and branches into a Mermaid mindmap diagram.",
        "arguments": [
          {
            "name": "centralTopic",
            "description": "The main subject of the mindmap.",
            "required": true
          },
          {
            "name": "keyPoints",
            "description": "A comma-separated list of key points to use as mindmap branches.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Summarize the following problem and possible causes as an Ishikawa (fishbone) diagram using PlantUML. Main problem: {mainProblem}. Causes: {causesList}.",
      "template": {
        "name": "diagram-fishbone",
        "description": "Generates a PlantUML fishbone diagram for a problem and its causes.",
        "arguments": [
          {
            "name": "mainProblem",
            "description": "The central problem for the fishbone diagram.",
            "required": true
          },
          {
            "name": "causesList",
            "description": "Comma-separated causes or categories.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Create an entity-relationship diagram (ERD) in PlantUML for the following entities and their relationships: {entitiesAndRelations}.",
      "template": {
        "name": "diagram-erd",
        "description": "Builds a PlantUML ERD diagram based on described entities and relationships.",
        "arguments": [
          {
            "name": "entitiesAndRelations",
            "description": "A textual description of entities and how they relate.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Visualize the following project timeline as a Gantt chart using Mermaid. Project steps: {projectSteps}.",
      "template": {
        "name": "diagram-gantt",
        "description": "Generates a Mermaid Gantt chart for a given project timeline.",
        "arguments": [
          {
            "name": "projectSteps",
            "description": "List of project steps with start and end dates (or durations).",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Create a sequence diagram that visualizes the interaction between the following actors: {actorsList}. Focus on the main message exchanges and keep it simple.",
      "template": {
        "name": "diagram-sequence",
        "description": "Builds a PlantUML sequence diagram to show interaction flow between listed actors.",
        "arguments": [
          {
            "name": "actorsList",
            "description": "Comma-separated list of actors or systems involved in the interaction.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Generate a flowchart that outlines the decision-making steps for: {decisionTopic}. Include key decision points and possible outcomes.",
      "template": {
        "name": "diagram-decision-flowchart",
        "description": "Creates a Mermaid flowchart showing steps, decisions, and outcomes for a given topic.",
        "arguments": [
          {
            "name": "decisionTopic",
            "description": "Briefly describe the decision process or scenario to visualize.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Visualize the following system architecture as a component diagram using PlantUML. Components: {componentList}. Show how they connect or interact.",
      "template": {
        "name": "diagram-component",
        "description": "Generates a PlantUML component diagram based on provided system components.",
        "arguments": [
          {
            "name": "componentList",
            "description": "Comma-separated list of system components and a brief description of their relationships.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Create a state diagram that illustrates the possible states and transitions for: {systemOrProcess}. Use PlantUML state diagram syntax.",
      "template": {
        "name": "diagram-state",
        "description": "Creates a PlantUML state diagram for the states and transitions of a process or system.",
        "arguments": [
          {
            "name": "systemOrProcess",
            "description": "Name and brief description of the system or process to visualize.",
            "required": true
          }
        ]
      }
    },
    {
      "prompt": "Summarize the following data flow as a data flow diagram (DFD) using PlantUML. Describe entities, data stores, and the flow of data between them: {dataFlowDescription}.",
      "template": {
        "name": "diagram-dataflow",
        "description": "Builds a PlantUML data flow diagram (DFD) based on described entities and flows.",
        "arguments": [
          {
            "name": "dataFlowDescription",
            "description": "Textual description of data sources, sinks, stores, and flows.",
            "required": true
          }
        ]
      }
    }
  ]
}
