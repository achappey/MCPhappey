// <auto-generated />
using MCPhappey.SQL.WebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCPhappey.Servers.SQL.Migrations
{
    [DbContext(typeof(McpDatabaseContext))]
    [Migration("20250313161733_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MCPhappey.SQL.Models.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromptTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptArgument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromptId")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PromptId");

                    b.ToTable("PromptArguments");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptResource", b =>
                {
                    b.Property<int>("PromptId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("PromptId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("PromptResources");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptResourceTemplate", b =>
                {
                    b.Property<int>("PromptId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceTemplateId")
                        .HasColumnType("int");

                    b.HasKey("PromptId", "ResourceTemplateId");

                    b.HasIndex("ResourceTemplateId");

                    b.ToTable("PromptResourceTemplates");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.ResourceTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("ResourceTemplates");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Prompt", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Server", "Server")
                        .WithMany("Prompts")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptArgument", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Prompt", "Prompt")
                        .WithMany("Arguments")
                        .HasForeignKey("PromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prompt");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptResource", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Prompt", "Prompt")
                        .WithMany("PromptResources")
                        .HasForeignKey("PromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCPhappey.SQL.Models.Resource", "Resource")
                        .WithMany("PromptResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prompt");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.PromptResourceTemplate", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Prompt", "Prompt")
                        .WithMany("PromptResourceTemplates")
                        .HasForeignKey("PromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCPhappey.SQL.Models.ResourceTemplate", "ResourceTemplate")
                        .WithMany("PromptResourceTemplates")
                        .HasForeignKey("ResourceTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prompt");

                    b.Navigation("ResourceTemplate");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Resource", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Server", "Server")
                        .WithMany("Resources")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.ResourceTemplate", b =>
                {
                    b.HasOne("MCPhappey.SQL.Models.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Prompt", b =>
                {
                    b.Navigation("Arguments");

                    b.Navigation("PromptResourceTemplates");

                    b.Navigation("PromptResources");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Resource", b =>
                {
                    b.Navigation("PromptResources");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.ResourceTemplate", b =>
                {
                    b.Navigation("PromptResourceTemplates");
                });

            modelBuilder.Entity("MCPhappey.SQL.Models.Server", b =>
                {
                    b.Navigation("Prompts");

                    b.Navigation("Resources");
                });
#pragma warning restore 612, 618
        }
    }
}
